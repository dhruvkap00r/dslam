TODO:
  Add camera pose estimation
  Create 3d representaion of the observations
  Start mapping and localization process




SLAM Algorightm:


Probabilistic SLAM:
  it gives the position or location of the robot and location of the landmarks, given all the actions taken by robot, observation and initial state.
  For all of this, we require a observation model and a state transition model.

Observation model:
  describe the probability of getting an observation Z(k) given the location X(k) and map.
    P(Z(k)|X(k), m)

Motion model:
  it gives probability destribution of state transition. It is a Markov process, probability of getting location X(k) depends on the previus location X(k-1) and action taken U(k).


While making observations,
it is hard to make correct decisions about landmark's locations, but we can get accurate location of a landmark relative to other landmark. 

P(M(i), M(j)) is higher than P(M(i)).

and it is proven that this probability monotonically increases.

** Every Landmark should be interlinked, so we can make observation and update their location,relativily, independent of our location.


Computer Vision:

idk about other applications but for doing SLAM we need camera rotation and  movement information because only then we can compare it with the real world



Fundamental matrix translation, essential matrix transformation:
  both are same, essential matrix gives you the information about rotations and translation and fundamental matrix gives you the same information but additionally it gives you information about intrinsic information

intrinsic parameters:
 

Camera Pose estimation:
  intrinsic matrix: K = [f(X) s x(0)]
                        [0 f(Y) y(0)]
                        [0    0    1]
  focal lenghth: it is the length from camera film to pinhole.
  principal point offset: It is the location of the principal point relative to the film's origin.

